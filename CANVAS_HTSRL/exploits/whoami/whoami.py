#! /usr/bin/env python



#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2004
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")


import os,getopt
import socket
from exploitutils import *


from canvasexploit import canvasexploit
import canvasengine
import time



NAME="whoami"
DESCRIPTION="Gets id result on each selected node"
DOCUMENTATION={}
DOCUMENTATION["Warning"]="Use on a UnixNode may trigger snort!"
VERSION="1.0"
GTK2_DIALOG="dialog.glade2"

affectsList=["Commands"]

class theexploit(canvasexploit):
    def __init__(self):
        canvasexploit.__init__(self)
        self.result=""
        self.name=NAME
        return

    def run(self):
        self.setInfo("%s (in progress)"%(NAME))
        for node in self.argsDict["passednodes"]:            
            type=node.nodetype
            nodename=node.getname()
            if type=="UnixShellNode":
                #this is going to trigger snort!
                self.log("We just triggered snort")
                self.result=node.runcommand("id -a")
            elif "posix" in node.capabilities or type == "ScriptNode":
                uid,euid,gid,egid=node.shell.ids() #0 for success in some cases...
                self.result="UID=%d EUID=%d GID=%d EGID=%d"%(uid,euid,gid,egid)
                self.log("Result: %s"%self.result)
            elif "win32api" in node.capabilities:
                self.result=node.shell.whoami()

                cname=self.exploitnodes("computername",nodes=[node])[0]
                # nodename is a string of type 'parentID->nodeID' so we parse
                # out the nodeID and use that as an index ??? XXX: check me
                try:
                    #self.log("cname=%s"%cname)
                    #self.log("node.getname()=%s"%node.getname())
                    #self.log("cname[node.getname()]=%s"%cname[node.getname()])
                    result=self.result.split("\\")[-1]
                    if str(cname[node.getname()])+"$" in result:
                        self.log("This is a LOCAL\\SYSTEM account")
                except: # XXX: the immunity way ;)
                    pass
                self.log("Result: %s"%self.result)
            else:
                self.log("Node of type %s not supported yet."%type)
                pass
            
        self.setInfo("%s - done (success)"%(NAME))
        return 1

    

