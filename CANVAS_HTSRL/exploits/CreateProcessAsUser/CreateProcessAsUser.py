#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2008
#http://www.immunityinc.com/CANVAS/ for more information

import sys

if "." not in sys.path: 
    sys.path.append(".")

import os,getopt
import socket
import time

from exploitutils import *
from canvasexploit import canvasexploit
import canvasengine
from shelllistener import *

NAME                = "CreateProcessAsUser"
DESCRIPTION         = "Creates a process given a token"
DOCUMENTATION       = {}
VERSION             = "1.0"

PROPERTY            = {}
PROPERTY['TYPE']    = "Commands"
PROPERTY['SITE']    = "Local"
PROPERTY['ARCH']    = [ ["Windows"] ]

from win32MosdefShellServer import win32errs

class theexploit(canvasexploit):
    def __init__(self):
        canvasexploit.__init__(self)
        self.name       = NAME
        self.token      = 0
        self.command    = ""
        return

    def getargs(self):
        self.getarg("token")
        self.getarg("command")
        return 
    
    def run(self):
        """
        This run happens on all nodes selected
        """
        self.setInfo("%s (in progress)" % (NAME))
        
        self.getargs()

        if not self.command:
            self.log("Need to pass this module a command")
            return 0

        node = self.argsDict["passednodes"][0]

        if "win32api" in node.capabilities:

            self.log("Running %s with token %s"%(self.command, self.token))
        
            ret,err = node.shell.CreateProcessAsUser(int(self.token), self.command)
            if ret != 0:
                self.log("CreateProcessAsUser Worked! (RETVL: %d)" % ret)
            else:
                self.log("CreateProcessAsUser Failed! (ERROR: %s)" % win32errs.get(err,err))
                return 0
 
        self.setInfo("%s (finished)" % (NAME))

        return 1

if __name__=="__main__":
    print "This win32 local module is meant to be run only within CANVAS"
    
