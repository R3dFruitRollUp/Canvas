#! /usr/bin/env python



#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2004
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
sys.path.append(".")
sys.path.append("../../")
sys.path.append('../../encoder')
sys.path.append('./encoder')
sys.path.append("../../shellcode")
sys.path.append("./shellcode")
sys.path.append("../../gui")
sys.path.append("./gui")


import os,getopt
import socket
from exploitutils import *
import addencoder
import win32shell
from canvasexploit import canvasexploit
import canvasengine
from canvasengine import socket_save_list
import time
import shellcodeGenerator


NAME="getthreadsinfo"
DESCRIPTION="Gets information on each thread in the process for all nodes"
DOCUMENTATION={}
#QO44056 fixes this?
VERSION="1.0"
GTK2_DIALOG="dialog.glade2"

affectsList=["Commands"]

runAnExploit_gtk2=canvasengine.runAnExploit_gtk2
runExploit=canvasengine.runExploit


class theexploit(canvasexploit):
    def __init__(self):
        canvasexploit.__init__(self)
        self.result=""
        self.name=NAME
        return

    def run(self):
        self.setInfo("%s (in progress)"%(NAME))
        for node in self.argsDict["passednodes"]:            
            type=node.nodetype
            if "win32api" in node.capabilities:
                self.result=node.shell.getthreadsinfo()
                if self.result==[]:
                    self.log("No tokens in the process...")
                else:
                    self.log("Result: %s"%self.result)
            else:
                self.log("Node of type %s not supported yet."%type)
                pass
            
        self.setInfo("%s - done (success)"%(NAME))
        return 1

    

