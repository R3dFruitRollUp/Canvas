#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2006
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")



from exploitutils import *
from canvasexploit import canvasexploit


NAME="Add Host"
DESCRIPTION="Adds a host to the host knowledge tree"
DOCUMENTATION={}
DOCUMENTATION["Notes"]="This will do resolution of the IP address/Name as well"
VERSION="1.0"

affectsList=["Tools"]

from libs.dnslookup import dnslookup

class theexploit(canvasexploit):
    def __init__(self):
        canvasexploit.__init__(self)
        self.result=""
        self.name=NAME
        return

    def addIPv6(self, ip, node):
        """ handle the adding of ipv6 addies """
        if ip in node.get_all_known_hosts():
            self.log("Host %s already known"%ip)
            self.setInfoDone()
            return 0

        self.result = ip

        #gi = self.getGeoIPlist()
        #if gi!=None:
        #    country = gi.country_code_by_addr(ip)
        #    self.log("Country code of %s: %s"%(ip,country))
        #else:
        #    country = None
        #if self.engine and country in self.engine.country_exclude_list:
        #    self.log("Host %s's country code is %s which is in the exclude list. Not adding.")
        #    self.setInfoDone()
        #    return 0
        
        newhost = node.new_host(ip)

        #if self.covertness<4:
        #    lookup=dnslookup(newhost)
        #    lookup.start() #spawn a new thread
        #else:

        self.log("Not looking up name for %s"%ip)

        self.log("Host added: %s"% ip)
        self.setInfo("%s - done (success: %s)"%(NAME,ip.strip()))

        return
        

    def run(self):

        self.setInfo("%s (in progress)"%(NAME))
        host=self.argsDict["host"]
        node=self.argsDict["passednodes"][0]

        # XXX: for IPv6 beta

        if ":" in host:
            self.addIPv6(host, node)
            return 1

        # XXX: end of mod        

        app=self.engine.getModuleExploit("gethostbyname")
        app.link(self)
        #print "argsDict=%s"%app.argsDict
        if not app.run(): #call gethostbyname()
            self.setInfoFailed(app.result.strip())
            return 0
        
        ip=app.result

        if ip in node.get_all_known_hosts():
            self.log("Host %s already known"%ip)
            self.setInfoDone()
            return 0

        gi = self.getGeoIPlist()
        if gi!=None:
            country = gi.country_code_by_addr(ip)
            self.log("Country code of %s: %s"%(ip,country))
        else:
            country = None
        if self.engine and country in self.engine.country_exclude_list:
            self.log("Host %s's country code is %s which is in the exclude list. Not adding.")
            self.setInfoDone()
            return 0
        
        newhost=node.new_host(ip)
        if self.covertness<4:
            lookup=dnslookup(newhost)
            lookup.start() #spawn a new thread
        else:
            self.log("Not looking up name for %s"%ip)
        self.result=ip
        self.log("Host added: %s"%self.result)
        self.setInfo("%s - done (success: %s)"%(NAME,self.result.strip()))
        return 1

