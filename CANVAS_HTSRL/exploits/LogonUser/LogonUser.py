#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2008
#http://www.immunityinc.com/CANVAS/ for more information

import sys

#covers both angles
if "." not in sys.path: 
    sys.path.append(".")

import os,getopt
import socket
import time

from exploitutils import *
from canvasexploit import canvasexploit
import canvasengine
from shelllistener import *

NAME                = "LogonUser"
DESCRIPTION         = "Gets a primary token given a username and password"
DOCUMENTATION       = {}
VERSION             = "1.0"

PROPERTY            = {}
PROPERTY['TYPE']    = "Commands"
PROPERTY['SITE']    = "Local"
PROPERTY['ARCH']    = [ ["Windows"] ]

class theexploit(canvasexploit):
    def __init__(self):
        canvasexploit.__init__(self)
        self.name       = NAME
        self.username   = ""
        self.password   = ""
        return

    def getargs(self):
        self.getarg("username")
        self.getarg("password")
        return 
    
    def run(self):
        self.setInfo("%s (in progress)"%(NAME))
        
        self.getargs()

        node = self.argsDict["passednodes"][0]

        if "win32api" in node.capabilities:
            ret,err,phToken = node.shell.LogonUser(self.username, self.password)

            if ret == 0:
                self.log("LogonUser Failed! (ERROR: %X)" % err)
                return 0
            else:
                self.log("LogonUser Worked! (TOKEN: %X)" % phToken)

        self.setInfo("%s (finished)" % (NAME))
        return 1

if __name__=="__main__":
    print "This win32 local module is meant to be run only within CANVAS"
    
