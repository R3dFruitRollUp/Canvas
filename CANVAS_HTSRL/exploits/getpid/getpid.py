#! /usr/bin/env python



#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2004
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")


import os,getopt
import socket
from exploitutils import *


from canvasexploit import canvasexploit
import canvasengine
import time



NAME="getpid"
DESCRIPTION="Gets process id on selected node"
DOCUMENTATION={}
#DOCUMENTATION["Warning"]=""
#QO44056 fixes this?
VERSION="1.0"
GTK2_DIALOG="dialog.glade2"

affectsList=["Commands"]

runAnExploit_gtk2=canvasengine.runAnExploit_gtk2
runExploit=canvasengine.runExploit


class theexploit(canvasexploit):
    def __init__(self):
        canvasexploit.__init__(self)
        self.result=""
        self.name=NAME
        return

    def run(self):
        self.setInfo("%s (in progress)"%(NAME))
        self.result=[]
        for node in self.argsDict["passednodes"]:            
            type=node.nodetype
            target=node.get_known_host("127.0.0.1") #always exists
            if type=="UnixShellNode":
                #this is going to trigger snort!
                self.log("We just triggered snort")
                self.result+=[node.runcommand("id -a")]
            elif type == "linuxNode":
                pid=node.shell.getpid() #0 for success in some cases...
                self.log("Pid: %s"%pid)
                target.add_knowledge("PID", pid, 100)
                self.result+=[pid]
            elif "win32api" in node.capabilities:
                pid=node.shell.getpid()
                target.add_knowledge("PID", pid, 100)
                self.result+=[pid]
                self.log("Pid: %s"%pid)
            else:
                self.log("Node of type %s not supported yet."%type)
                self.result+=["Unknown: %s"%type]
            
        self.setInfo("%s - done (success)"%(NAME))
        return 1

    

